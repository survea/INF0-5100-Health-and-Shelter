/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.HASShelterEmployeeRole;

import userInterface.HASEmployeeRole.*;
import business.EcoSystem;
import business.Organization;
import business.enterprise.Enterprise;
import business.network.Network;
import business.organization.HasHealthcareRepresentativeOrganization;
import business.organization.HasShelterOrganization;
import business.organization.ReceptionistOrganization;
import business.roles.AdminRole;
import business.roles.Role;
import business.userAccount.UserAccount;
import business.workQueue.PatientTestRequest;
import business.workQueue.WorkRequest;
import java.awt.CardLayout;
import static java.awt.image.ImageObserver.PROPERTIES;
import java.util.Optional;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Diksha Godse
 */
public class HASShelterEmployeeWorkStatusJPanel extends javax.swing.JPanel {

    /**
     * Creates new form HAsEmployeeWorkStatusJPanel
     */
    JPanel userProcessContainer;
    UserAccount userAccount;
    HasShelterOrganization organization;
    Enterprise enterprise;
    EcoSystem business;

    public HASShelterEmployeeWorkStatusJPanel(JPanel userProcessContainer, UserAccount account, HasShelterOrganization organization, Enterprise enterprise, EcoSystem business) {
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.organization = organization;
        this.enterprise = enterprise;
        this.business = business;
        initComponents();
        populateTable();
        populateJComboBox();
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
                Object[] row = new Object[5];
                row[0] = request;
                        row[1] = request.getShelterRequestName();
                        row[2] = request.getAssignedfor();
                        row[3] = request.getAssignedShelter();
                        row[4] = request.getStatus();
                model.addRow(row);
        }
    }

    public void populateJComboBox() {
        cmbNetworkHospital.removeAllItems();
        for (Network network : business.getNetworkList()) {
            for (Enterprise enter : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enter.getEnterpriseType().equals(Enterprise.EnterpriseType.NGO.getValue())) {
                    cmbNetworkHospital.addItem(enter);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbNetworkHospital = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();

        cmbNetworkHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbNetworkHospitalActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButton1.setText("ASSIGN SHELTER");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Type", "Name", "Assigned for", "Assigned Shelter", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        backJButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        backJButton.setText("BACK");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addComponent(cmbNetworkHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(512, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backJButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cmbNetworkHospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbNetworkHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbNetworkHospitalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbNetworkHospitalActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Enterprise ent = (Enterprise) cmbNetworkHospital.getSelectedItem();
        int selectedRow = workRequestJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please make a selection");
            return;
        }
        WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
        if (request.getStatus().equals("Assigned Shelter")) {
            JOptionPane.showMessageDialog(null, "Already Assigned Shelter");
            return;
        }
        if (ent.enterpriseType.equalsIgnoreCase(Enterprise.EnterpriseType.NGO.getValue())) {
            for (UserAccount userAcc : ent.getUserAccountDirectory().getUserAccountList()) {
                if (userAcc.getRole() instanceof AdminRole) {
                    request.setTypeOfRequest("ShelterAssignedRequest");
                    request.setStatus("Shelter Requested");
                    request.setReceiver(userAcc);
                    request.setAssignedShelter(ent.toString());
                    //req.setPimage("Have to upload");
                    ((UserAccount) userAcc).getWorkQueue().getWorkRequestList().add(request);
                    JOptionPane.showMessageDialog(null, "Assigned to the Hospital, pending initial checkup");
       
                    // updating work request of render HAS employee
//                    WorkRequest currentReq = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
//
//                    Optional<WorkRequest> selectedWorkReq;
//                    selectedWorkReq = userAccount.getWorkQueue().getWorkRequestList().stream()
//                            .filter(x -> x == currentReq)
//                            .findFirst();
//                    ((WorkRequest) selectedWorkReq.get()).setStatus("Awaiting initial checkup reports");
//                    ((WorkRequest) selectedWorkReq.get()).setTypeOfRequest("InitialCheckupRequest");
//                    ((WorkRequest) selectedWorkReq.get()).setReceiver(userAcc);
                }
            }
        }
         populateTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox cmbNetworkHospital;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
