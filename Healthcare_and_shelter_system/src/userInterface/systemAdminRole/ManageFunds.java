/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.systemAdminRole;

import business.EcoSystem;
import business.enterprise.Enterprise;
import business.enterprise.EnterpriseDirectory;
import business.network.Network;
import business.roles.AdminRole;
import business.userAccount.UserAccount;
import business.workQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Diksha Godse
 */
public class ManageFunds extends javax.swing.JPanel {

    /**
     * Creates new form ManageNetworkJPanel
     */
    JPanel userProcessContainer;
    EcoSystem system;

    ManageFunds(JPanel userProcessContainer, EcoSystem system) {
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        initComponents();
        populateNetworkTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        networkJTable = new javax.swing.JTable();
        submitJButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        networkJTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        networkJComboBox = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(254, 254, 254));

        networkJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Network  Name ", "Total Network  Funds"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(networkJTable);

        submitJButton.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        submitJButton.setForeground(new java.awt.Color(95, 114, 147));
        submitJButton.setText("Assign");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Serif", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(77, 93, 132));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Funds Organization Name:");

        jLabel2.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(88, 105, 144));
        jLabel2.setText("All Fund Organizations in system");

        networkJTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fund Requester Name ", "Status", "Message", "Fund Requested"
            }
        ));
        jScrollPane2.setViewportView(networkJTable1);

        jLabel3.setFont(new java.awt.Font("Serif", 1, 15)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(88, 105, 144));
        jLabel3.setText("Fund requested in system");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 679, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 679, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 50, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(302, 302, 302)
                        .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(networkJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(networkJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(submitJButton)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        int row = networkJTable1.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        WorkRequest request = (WorkRequest) networkJTable1.getValueAt(row, 0);
        if(request.getStatus().equalsIgnoreCase("Funds Processed")){
            JOptionPane.showMessageDialog(null, "Funds are already processed!", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        request.setStatus("Raise Funds");
        request.setMessage("Help organization for Funds");
        Network network = (Network) networkJComboBox.getSelectedItem();
                for (Enterprise ent : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (ent.enterpriseType.equalsIgnoreCase(Enterprise.EnterpriseType.FundRaiser.getValue())) {
                    for(UserAccount adminUser : ent.getUserAccountDirectory().getUserAccountList()) {
                        if(adminUser.getRole() instanceof AdminRole) {
                            adminUser.getWorkQueue().getWorkRequestList().add(request);
                            JOptionPane.showMessageDialog(this, "Registration submitted Successfully. Sent to Fund Admin for Approval!");

                        }
                    }
                }
            }
       populateNetworkTable();
    }//GEN-LAST:event_submitJButtonActionPerformed

     void populateNetworkTable() {
        networkJComboBox.removeAllItems();
        for (Network network : system.getNetworkList()) {
            networkJComboBox.addItem(network);
        }
        
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) networkJTable.getModel();
        model.setRowCount(0);
        for (Network network : system.getNetworkList()) {
             EnterpriseDirectory ed = network.getEnterpriseDirectory();
            for (Enterprise e : ed.getEnterpriseList()) {
                if (e.getEnterpriseType().equalsIgnoreCase("Fund Raiser")) {
                    Object[] row = new Object[2];
                    row[0] = network.getName();
                    int funds = e.getFundsCollected();
                    if (funds >= 0) {
                        row[1] = e.getFundsCollected();
                    }
                    model.addRow(row);
                }
            }
        }
        
        DefaultTableModel model1 = new DefaultTableModel();
        model1 = (DefaultTableModel) networkJTable1.getModel();
        model1.setRowCount(0);
        UserAccount user = system.getUserAccountDirectory().getUserAccountList().get(0);
            for (WorkRequest r : user.getWorkQueue().getWorkRequestList()) {
                if (r.getStatus().equals("FundsNeeded")) {
                    Object[] row = new Object[4];
                    row[0] = r;
                    row[1] = r.getStatus();
                    row[2] = r.getMessage();
                    row[3] = r.getRequest().getRequestedAmount();
                    model1.addRow(row);
                }
            }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<Object> networkJComboBox;
    private javax.swing.JTable networkJTable;
    private javax.swing.JTable networkJTable1;
    private javax.swing.JButton submitJButton;
    // End of variables declaration//GEN-END:variables
}
